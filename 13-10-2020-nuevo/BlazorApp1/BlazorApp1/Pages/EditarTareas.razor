@page "/EditarTareas/{id:int}"
@using BlazorApp1.Data
@inject TareaService service
@inject DetalleService Detalleservice
@inject RecursoService Recursoservice
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label for="Nombre"> Titulo: </label>
    <InputText class="mr-3" @bind-Value="Modelo.Titulo" />
    <label for="Nombre"> Estimacion: </label>
    <InputText class="mr-3" @bind-Value="Modelo.Estimacion" />
    <label for="Nombre"> Vencimiento: </label>
    <InputDate class="mr-3" @bind-Value="Modelo.Vencimiento" />
    <label for="Nombre"> Estado: </label>
    <InputCheckbox class="mr-3" @bind-Value="Modelo.Estado" />

    <InputSelect class="mr-3" @bind-Value="RecursoId">
        <option value="0">Elija un Recurso</option>
        @foreach (var item in recursos)
        {
<option value="@item.Id">@item.Nombre</option>}
    </InputSelect>



    <button type="submit">Guardar</button>
</EditForm>



@if (detalles == null || Modelo.Id == 0)
{

}
else
{
<h2 class="mt-3">Detalles</h2>
                <button class="btn btn-info btn-lg mb-3" @onclick="()=>Editar(0)">Nuevo</button>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Fecha</th>
                                            <th>Tiempo</th>
                                            <th>Recurso</th>
                                            <th>Tarea</th>
                                            <th>Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in detalles)
                                        {
                        @if (item.TareaId == Modelo.Id)
                        {
    <tr>
        <td>@item.Fecha</td>
        <td>@item.Tiempo</td>
        <td>@item.Recurso.Nombre</td>
        <td>@item.Tarea.Titulo</td>
        <td><button class="btn btn-primary btn-sm" @onclick="()=>Editar(item.Id)">Editar</button> <button class="btn btn-danger btn-sm" @onclick="()=>Borrar(item.Id)">Borrar</button></td>
    </tr>}}
                                    </tbody>
                                </table>}
@code { [Parameter]
    public int Id { get; set; }
    public string RecursoId { get; set; }
    public Tarea Modelo { get; set; } = new Tarea();
    private List<Recurso> recursos = new List<Recurso>() ;
    private List<Detalle> detalles = new List<Detalle>();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await service.Get(Id);
            RecursoId = Modelo.RecursoId.ToString();
        }
        else
        {
            Modelo = new Tarea();
        }
        recursos = await Recursoservice.GetAll();
        detalles = await Detalleservice.GetAll();
    }

    private async void Guardar()
    {
        Modelo.RecursoId = int.Parse(RecursoId);
        await service.Save(Modelo);
        navigation.NavigateTo("/ListadoTareas/");
    }
    protected void Editar(int id)
    {
        navigation.NavigateTo("/EditarDetalles/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar el detalle?");
        if (confirmed)
        {
            await Detalleservice.Remove(id);
            detalles = await Detalleservice.GetAll();
        }

    } }