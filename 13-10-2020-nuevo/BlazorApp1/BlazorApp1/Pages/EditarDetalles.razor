@page "/EditarDetalles/{id:int}"
@using BlazorApp1.Data
@inject DetalleService service
@inject RecursoService Recursoservice
@inject TareaService Tareaservice
@inject NavigationManager navigation

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label for="Nombre"> Tiempo: </label>
    <InputText class="mr-3" @bind-Value="Modelo.Tiempo" />
    <label for="Nombre"> Fecha: </label>
    <InputDate class="mr-3" @bind-Value="Modelo.Fecha" />

    <InputSelect class="mr-3" @bind-Value="RecursoId">
        <option value="0">Elija un Recurso</option>
        @foreach (var item in recursos)
        {
<option value="@item.Id">@item.Nombre</option>}
    </InputSelect>

    <InputSelect class="mr-3" @bind-Value="TareaId">
        <option value="0">Elija una Tarea</option>
        @foreach (var item in tareas)
        {
<option value="@item.Id">@item.Titulo</option>}
    </InputSelect>

    <button type="submit">Guardar</button>
</EditForm>


@code { [Parameter]
    public int Id { get; set; }

    public Detalle Modelo { get; set; } = new Detalle();

    public string TareaId { get; set; }

    //inicializas para que no de null
    private List<Tarea> tareas = new List<Tarea>();

    public string RecursoId { get; set; }

    private List<Recurso> recursos = new List<Recurso>();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await service.Get(Id);
            RecursoId = Modelo.RecursoId.ToString();
            TareaId = Modelo.TareaId.ToString();
        }
        else
        {
            Modelo = new Detalle();
        }
        tareas = await Tareaservice.GetAll();
        recursos = await Recursoservice.GetAll();
    }


    private async void Guardar()
    {

        Modelo.RecursoId = int.Parse(RecursoId);
        Modelo.TareaId = int.Parse(TareaId);
        await service.Save(Modelo);
        navigation.NavigateTo("/ListadoDeDetalles/");
    } }